name: Unicorn Brain Automation Tests
on: push

jobs:
  unicorn-brain-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Node Installation
        uses: actions/setup-node@v1
        with:
          node-version: '18'

      - name: Global Newman
        run: |
          npm install -g newman
          npm install -g newman newman-reporter-htmlextra

      - name: Fetch new test cases in Postman Collection
        env:
          COLLECTION_URL: ${{ secrets.COLLECTION_URL }}
          POSTMAN_ACCESS_KEY: ${{ secrets.POSTMAN_ACCESS_KEY }}
        run: |
          curl -o version1.json -L ${COLLECTION_URL}access_key=${POSTMAN_ACCESS_KEY}

      - name: Format JSON
        run: |
          jq . version1.json > version1_formatted.json
          mv version1_formatted.json version1.json

      - name: Run Collection with OAuth2.0
        env:
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        run: |
          newman run version1.json \
            -e non-prod.postman_environment.json \
            --env-var "client_secret=$CLIENT_SECRET" \
            -r htmlextra --reporter-htmlextra-export ./reports/htmlreport.html --reporter-htmlextra-darkTheme  > runreport1.html

      # - name: Publish report
      #   uses: MeilCli/slack-upload-file@v1
      #   with:
      #     slack_token: ${{ secrets.SLACK_TOKEN }}
      #     file_path: './reports/htmlreport.html'
      #     file_name: 'htmlreport.html'
      #     file_type: 'html'
      #     channels: 'unicorn-qa'

      # - name: Upload HTML Report
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: newman-reports
      #     path: newman/

      # - name: List Files in HTML Report Directory
      #   run: |
      #     ls -R newman-reports

      # - name: Download HTML Report Artifact
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: newman-reports

      # - name: Commit and Push Changes
      #   uses: stefanzweifel/git-auto-commit-action@v4
      #   with:
      #     commit_message: 'Demo newman collection'
      #     push_options: '--force'
      #     env:
      #     GITHUB_TOKEN: ${{ secrets.TOKEN }}
      #     run: |
      #       echo "Starting Git Commit and Push"
      #       git status  # Add this line to see the repository status before the commit and push.
      #       git commit -am "Demo newman collection"
      #       git push --force
      #       echo "Git Commit and Push completed"

      - name: Send HTML Report Link to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_RUN_ID: ${{ github.run_id }}
        run: |
          ls
          cat './reports/htmlreport.html'
          # Generate the URL for the HTML report
          html_report_url="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID/artifacts/newman-reports/htmlreport/index.html"

          # Prepare the Slack message with a clickable link
          payload='{
            "text": "Newman Test Report",
            "attachments": [
              {
                "fallback": "Unicorn Brain Test Report",
                "color": "#36a64f",
                "title": "Unicorn Brain Test Report",
                "title_link": "'"./reports/htmlreport.html"'"             
              }
            ]
          }'

          # Send the payload to Slack
          curl -X POST -H 'Content-type: application/json' --data "$payload" "$SLACK_WEBHOOK_URL"
